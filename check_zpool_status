#!/bin/sh
#
# check_zpool_status: Nagios Plugin to check the status of a zpool
#
# Copyright (c) 2020, Chris Gordon
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright notice, this
#      list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright notice,
#      this list of conditions and the following disclaimer in the documentation
#      and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# variables
#

#
# global vars
#
VERSION="1.0.0"
PROGNAME="${0##*/}"
POOL=""
STATUS=""
HOST="localhost"

version() {
	printf "Nagios Plugin ${PROGNAME} for checking status of zpools ${VERSION}\n\n"
	exit 3
}

usage() {
	printf "usage:  ${PROGNAME} [options]\n\n"
	printf "options:\n"
	printf "  -v\tShow version.\n"
	printf "  -h\tShow this help message.\n"
	#printf "  -H\tHostname to monitor. Defaults to localhost.\n"
	printf "  -p\tPool name.\n"

	exit 3
}

#
# main
#
while getopts "vhp:H:" OPT; do
	case ${OPT} in
		v) version;;
		h) usage;;
		p) POOL=${OPTARG};;
		#H) HOST=${OPTARG};;
		*) usage;;
	esac
done

if [ -z "${POOL}" ]; then
	printf "Must specify a pool to check.\n"
	exit 3
fi

STATUS=$(/sbin/zpool status ${POOL} 2>/dev/null | grep state | awk '{print $2}')

if [ -z "${STATUS}" ]; then
	printf "Problem getting status of pool ${POOL}\n"
	exit 1
fi

if [ "${STATUS}" = "ONLINE" ]; then
	printf "POOL OK - ${POOL}\n"
	exit 0
else
	printf "POOL ${STATUS} - ${POOL}\n"
	exit2
fi


exit 3

